{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red254\green187\blue91;\red86\green132\blue173;\red133\green96\blue154;\red88\green118\blue71;}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c34510\c46275\c27843;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 public class \cf4 ExcersieOne \{\
    \cf2 public static void \cf5 main\cf4 () \{\
        
\f1\i FindingPrimeInteger
\f0\i0 ()\cf2 ;\
        
\f1\i \cf4 CountingTime
\f0\i0 ()\cf2 ;\
        
\f1\i \cf4 FindPrimeLong
\f0\i0 ()\cf2 ;\
        
\f1\i \cf4 TimeTakenLong
\f0\i0 ()\cf2 ;\
    \cf4 \}\
\
    \cf2 public static void \cf5 FindingPrimeInteger\cf4 ()\{\
        \cf2 int \cf4 flag = \cf6 0\cf2 , \cf4 i\cf2 , \cf4 j\cf2 ;\
        \cf4 System.
\f1\i \cf7 out
\f0\i0 \cf4 .println (\cf8 "The prime number between 0 to " \cf4 +Integer.
\f1\i \cf7 MAX_VALUE
\f0\i0 \cf4 )\cf2 ;\
                for \cf4 (i =\cf6 0\cf2 ; \cf4 i<Integer.
\f1\i \cf7 MAX_VALUE
\f0\i0 \cf2 ;\cf4 i++)\{\
                    \cf2 for \cf4 (j=\cf6 2\cf2 ; \cf4 j<i\cf2 ;\cf4 j++)\{\
                        \cf2 if\cf4 (i%j == \cf6 0\cf4 )\{\
                            flag = \cf6 0\cf2 ;\
                            break;\
                        \cf4 \}\
                        \cf2 else\cf4 \{\
                            flag =\cf6 1\cf2 ;\
                        \cf4 \}\
                    \}\
                    \cf2 if \cf4 (flag == \cf6 1\cf4 )\{\
                        System.
\f1\i \cf7 out
\f0\i0 \cf4 .println(i)\cf2 ;\
                    \cf4 \}\
                \}\
\
\
    \}\
    \cf2 public static void \cf5 CountingTime\cf4 ()\{\
        \cf2 long \cf4 time = System.
\f1\i currentTimeMillis
\f0\i0 ()\cf2 ;\
        long \cf4 estimate = \cf6 0\cf2 ;\
        long \cf4 count = \cf6 0\cf2 ;\
        for\cf4 ( \cf2 int \cf4 i =Integer.
\f1\i \cf7 MAX_VALUE
\f0\i0 \cf2 ; \cf4 i < Integer.
\f1\i \cf7 MAX_VALUE
\f0\i0 \cf2 ; \cf4 i++)\{\
            count ++\cf2 ;\
        \cf4 \}\
        estimate = System.
\f1\i currentTimeMillis
\f0\i0 ()\cf2 ;\
        \cf4 System.
\f1\i \cf7 out
\f0\i0 \cf4 .println(\cf8 "\cf2 \\n\cf8  time taken is " \cf4 + (estimate - time)+ \cf8 "mills"\cf4 )\cf2 ;\
\
    \cf4 \}\
    \
    \cf2 public static void \cf5 FindPrimeLong\cf4 ()\{\
        \cf2 int \cf4 flag = \cf6 0\cf2 ,\cf4 i\cf2 ,\cf4 j\cf2 ;\
        \cf4 System.
\f1\i \cf7 out
\f0\i0 \cf4 .println(\cf8 "The prime numbers in between 0 to long interger" \cf4 + Long.
\f1\i \cf7 MAX_VALUE
\f0\i0 \cf4 )\cf2 ;\
        for \cf4 (i=\cf6 0\cf2 ; \cf4 i< Long.
\f1\i \cf7 MAX_VALUE
\f0\i0 \cf2 ; \cf4 i++)\{\
            \cf2 for \cf4 (j=\cf6 0\cf2 ; \cf4 j<i\cf2 ; \cf4 j++)\{\
                \cf2 if \cf4 (i % j ==\cf6 0\cf4 )\{\
                    flag =\cf6 0\cf2 ;\
                    break;\
                \cf4 \}\
                \cf2 else\cf4 \{\
                    flag =\cf6 1\cf2 ;\
                \cf4 \}\
            \}\
            \cf2 if \cf4 (flag == \cf6 1\cf4 )\{\
                System.
\f1\i \cf7 out
\f0\i0 \cf4 .println(i)\cf2 ;\
            \cf4 \}\
        \}\
    \}\
    \
    \cf2 public static void \cf5 TimeTakenLong\cf4 ()\{\
        \cf2 long \cf4 time = System.
\f1\i currentTimeMillis
\f0\i0 ()\cf2 ;\
        long \cf4 estimate = \cf6 0\cf2 ;\
        long \cf4 count = \cf6 0\cf2 ;\
        for\cf4 ( \cf2 long \cf4 i =Long.
\f1\i \cf7 MAX_VALUE
\f0\i0 \cf2 ; \cf4 i < Integer.
\f1\i \cf7 MAX_VALUE
\f0\i0 \cf2 ; \cf4 i++)\{\
            count ++\cf2 ;\
        \cf4 \}\
        estimate = System.
\f1\i currentTimeMillis
\f0\i0 ()\cf2 ;\
        \cf4 System.
\f1\i \cf7 out
\f0\i0 \cf4 .println(\cf8 "\cf2 \\n\cf8  time taken is " \cf4 + (estimate - time)+ \cf8 "mills"\cf4 )\cf2 ;\
    \cf4 \}\
    \
\}\
\
}